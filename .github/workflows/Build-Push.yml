name: Java CI with Gradle
on:
  pull_request:
    types:
      - assigned
    branches:
      - main

  workflow_dispatch:
  push:
    branches:
      - 'main'
      - 'dev/**'
jobs:
  Gradle-Build-and-Test:
    runs-on: ubuntu-latest
    environment: backend-test-dev
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Run tests
        run: ./gradlew test jacocoTestReport

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: build/test-results/test

      - name: Upload code coverage report
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: build/reports/jacoco/test/jacocoTestReport.xml

  Sonarcloud-Scan:
    needs: Gradle-Build-and-Test
    runs-on: ubuntu-latest
    environment: backend-test-dev
    steps:
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v3.0.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}
            -Dsonar.java.coveragePlugin=jacoco
            -Dsonar.coverage.jacoco.xmlReportPaths=build/reports/jacoco/test/jacocoTestReport.xml      

  Build-and-Push-image-to-DockerHub:
    needs: Sonarcloud-Scan
    runs-on: ubuntu-latest
    environment: backend-test-dev
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          IMAGE_TAG=${{ secrets.DOCKER_USERNAME }}/github-actions-backend:${TIMESTAMP}
          docker build -t ${IMAGE_TAG} .
          docker push ${IMAGE_TAG}